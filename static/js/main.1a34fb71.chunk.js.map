{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fireBaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uudiv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a34fb71.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  // github에 올라가는 것만 방지, RCA에서는 노출 됨, 환경변수는 반드시\n  // REACT_APP으로 시작해야함\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const fireBaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from 'fBase';\nimport React, { useState } from 'react';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    // 기본 실행 행위 방지 , 리프레쉬 안 되도록\n    try {\n      if (newAccount) {\n        ///create account\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n        //log in\n      }\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? 'Create Account' : 'Log In'}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? 'Sign in' : 'Create Account'}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from 'components/AuthForm';\nimport { authService, fireBaseInstance } from 'fBase';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === 'google') {\n      provider = new fireBaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new fireBaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={'#04AAFF'}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { dbService, storageService } from 'fBase';\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delete this nweet');\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} alt=\"attac\" />\n          )}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fBase';\nimport { v4 as uudiv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const onSubmit = async (event) => {\n    if (nweet === '') {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uudiv4()}`);\n      const response = await attachmentRef.putString(attachment, 'data_url');\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection('nweets').add(nweetObj);\n    setNweet('');\n    setAttachment('');\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment('');\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt=\"attach\"\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\nimport { dbService } from 'fBase';\nimport React, { useState, useEffect } from 'react';\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  //   const getNweets = async () => {\n  //     const dbnweets = await dbService.collection('nweets').get();\n  //     dbnweets.forEach((document) => {\n  //       const nweetObject = {\n  //         ...document.data(),\n  //         id: document.id,\n  //       };\n  //       setNweets((prev) => [nweetObject, ...prev]);\n  //     });\n  //   };\n  useEffect(() => {\n    // getNweets();\n    dbService.collection('nweets').onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {console.log(userObj)}\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { authService, dbService } from 'fBase';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection('nweets')\n      .where('creatorId', '==', userObj.uid)\n      .orderBy('createdAt', 'desc')\n      .get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n  };\n  useEffect(() => {\n    getMyNweets();\n  });\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n    }\n    refreshUser();\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : 'Profile'}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport Navigation from 'components/Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: '100%',\n              margin: '0 auto',\n              marginTop: 80,\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n          //  리프래쉬 하면 * 모든 페이지에서 / 루트로 리다이렉트\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fBase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n          // 중간 과정 function\n          //  react는 오브젝트가 너무 커지면 비교 랜더링이 제대로 작동하지 않게되어\n          // user 오브젝트 전체를 다 쓰면 에러가 생길 수 있음\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    // setUserObj(Object.assign({},user))\n    // react가 큰 오브젝트의 비교 랜더링을 할 수 있게 해주는 다른 방법\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        'Initializing...'\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}